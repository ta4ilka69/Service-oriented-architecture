openapi: 3.1.1
info:
  title: Grammy Service Endpoints - OpenAPI 3.1.1
  description: |-
    **OpenAPI** specification for **Laboratory work â„–1** of **Service-oriented architecture** at **ITMO-University**.
  contact:
    name: Roman Kobelev & Balin Artem
    url: https://github.com/ta4ilka69/Service-oriented-architecture
  license:
    name: The MIT License
    url: https://mit-license.org/
  version: 0.0.1
servers:
  - url: 'https://localhost:5252/api/v1/grammy'
    description: Helios
paths:
  /band/{band-id}/singles/add:
    put:
      summary: Add a single to the band
      description: Add a single to the band
      parameters:
        - name: band-id
          in: path
          required: true
          schema:
            type: number
            format: int32
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/SingleSchema'
      responses:
        '200':
          description: Return created single
          content:
            application/xml:
              schema:
                $ref: './music.yaml#/components/schemas/Album'
        default:
          description: Returns error code, message and time in case of error
          content:
            application/xml:
              schema:
                $ref: './music.yaml#/components/schemas/Error'
  /band/{band-id}/participants/add:
    post:
      summary: Add a participant to the band
      description: Add a participant to the band
      parameters:
        - name: band-id
          in: path
          required: true
          schema:
            type: number
            format: int32
      responses:
        '200':
          description: Return music band
          content:
            application/xml:
              schema:
                $ref: './music.yaml#/components/schemas/MusicBand'
        default:
          description: Returns error code and message in case of error
          content:
            application/xml:
              schema:
                $ref: './music.yaml#/components/schemas/Error'
components:
  schemas:
    SingleSchema:
      type: object
      properties:
        name:
          type: string
      required:
        - name
